input {
    file {
        path => "/var/log/nginx/20*"
        sincedb_path => "/dev/null"
        start_position => "beginning"
        type => "logstash"
    }
    file {
        path => "/var/log/nginx-notice/20*"
        sincedb_path => "/dev/null"
        start_position => "beginning"
        type => "notice"
    }
    file {
        path => "/var/log/nginx-tools-trace/20*"
        sincedb_path => "/dev/null"
        start_position => "beginning"
        type => "tools-trace"
    }
}

filter {
    urldecode {
        field => "message"
    }
    grok {
        match => { "message" => ["\[%{HTTPDATE:DATE}\] \"%{WORD:METHOD} %{DATA:URL} HTTP/%{NUMBER:HTTP_VERSION}\""] }
    }

    date {
        match => [ "DATE", "dd/MMM/YYYY:H:m:s Z" ]
        target => "DATE"
    }

    ruby {
        code => 'url = event.get("URL");
            regex = /PIPELINE_ID=(.*?)&/;
            pipelineId = url.slice(regex, 1)
            array=pipelineId.split("/")
            pole=array.first
            event.set("POLE", pole);
            application = "not_found"
            if (array.length() > 2)
                application=array.at(array.length() - 2 ).gsub("_Pipelines","")
            end
            event.set("APPLICATION", application)'
    }

    kv {
        source => "URL"
        field_split => "&?"
        include_brackets => false
    }

    mutate {
        convert => {
            "XRAY_SECURITY_ALERT" => "integer"
            "XRAY_LICENCE_ALERT" => "integer"
            "SONAR_BUGS" => "integer"
            "SONAR_CODE_SMELLS" => "integer"
            "SONAR_COVERAGE" => "float"
            "SONAR_VIOLATIONS" => "integer"
        }
    }

    json {
        source => "DEPLOY_TARGETS"
        target => "DEPLOY_TARGETS_PARSED"
    }

    json {
        source => "IMG_USED"
        target => "IMG_USED_PARSED"
    }

    fingerprint{
        source => ["message"]
        target => "fingerprint"
        key => "78787878"
        method => "SHA1"
        concatenate_sources => true
    }
}

output {
    elasticsearch {
        hosts => ["elasticsearch:9200"]
        index => "%{type}-datas"
        manage_template => false
        document_id => "%{fingerprint}"
        user => elastic
        password => mypassword
    }
    stdout { codec => rubydebug }
}
